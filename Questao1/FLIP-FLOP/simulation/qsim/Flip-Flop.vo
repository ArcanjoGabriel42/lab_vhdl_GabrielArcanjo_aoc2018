// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.0 Build 185 10/21/2015 SJ Lite Edition"

// DATE "10/18/2018 06:31:18"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FLIPFLOPD (
	Dados_in,
	Clock,
	Dados_out);
input 	Dados_in;
input 	Clock;
output 	Dados_out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Dados_out~output_o ;
wire \Dados_in~input_o ;
wire \Clock~input_o ;
wire \Dados_out$latch~combout ;


cyclonev_io_obuf \Dados_out~output (
	.i(\Dados_out$latch~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Dados_out~output_o ),
	.obar());
// synopsys translate_off
defparam \Dados_out~output .bus_hold = "false";
defparam \Dados_out~output .open_drain_output = "false";
defparam \Dados_out~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \Dados_in~input (
	.i(Dados_in),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Dados_in~input_o ));
// synopsys translate_off
defparam \Dados_in~input .bus_hold = "false";
defparam \Dados_in~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Clock~input (
	.i(Clock),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Clock~input_o ));
// synopsys translate_off
defparam \Clock~input .bus_hold = "false";
defparam \Clock~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb Dados_out$latch(
// Equation(s):
// \Dados_out$latch~combout  = ( \Dados_out$latch~combout  & ( \Clock~input_o  & ( \Dados_in~input_o  ) ) ) # ( !\Dados_out$latch~combout  & ( \Clock~input_o  & ( \Dados_in~input_o  ) ) ) # ( \Dados_out$latch~combout  & ( !\Clock~input_o  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\Dados_in~input_o ),
	.datae(!\Dados_out$latch~combout ),
	.dataf(!\Clock~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Dados_out$latch~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam Dados_out$latch.extended_lut = "off";
defparam Dados_out$latch.lut_mask = 64'h0000FFFF00FF00FF;
defparam Dados_out$latch.shared_arith = "off";
// synopsys translate_on

assign Dados_out = \Dados_out~output_o ;

endmodule
